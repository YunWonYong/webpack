nvm을 사용해 버전을 변경함.

# node: 13.14.1
REPL[Read Eval Print Loop]

# npm: 6.13.6
1. npm i -g npm@6.13.6
i는 install의 축약어고 -g 옵션은 global의 약자다.
2. npm init으로 프로젝트 생성
3. npm의 버전 관리 방식
유의적 버전(Sementic Version) 방식으로 패키지 버전을 관리한다.
    > 주(Major).부(Minor).수(Patch) 세 가지 숫자를 조합해 버전을 관리한다.
    > * Major: 기존 버전과 호환되지 않게 변경한 경우
    > * Minor: 기존 버전과 호환되면서 기능이 추가된 경우
    > * Patch: 기존 버전과 호환되면서 버그를 수정한 경우

    버전의 범위
    > 어떤 특수문자를 사용하냐에 따라 방식이 달라진다.
    > * 16.12.2 고정값으로 설정
    > * \> 16.12.2 버전보다 큰 버전을 설정
    > * \>= 16.12.2 같은 버전이거나 큰 버전을 설정
    > * \< 16.12.2 버전보다 작은 버전을 설정
    > * \<= 16.12.2 같은 버전이거나 작은 버전을 설정
    > * \~16.12.2는 16.13.0 미만 까지 포함하고 ~16은 17.0.0 미만 까지 포함한다.
    > * \^16.12.2는 17.0.0 미만 까지 포함하고 ^16은 16.0.0부터 16.1.0 미만 까지 포함한다.

# webpack
bundling을 하기 위한 도구이며, 강의에서 사용하는 버전은 4을 사용함.
```sh
npm i -d webpack@4.41.5 webpack-cli@3.3.10
```
node_modules의 .bin directory가 생기고 그 안에 webpack를 사용할 수 있는 스크립트가 생김.
실행할 때 인자로 필수 옵션이 필요함.
1. -&nbsp;-mode [development | production | none]
2. -&nbsp;-entry [index.js와 같은 애플리케이션의 시작점]
3. -&nbsp;-output [bundling의 결과를 출력할 경로]

```sh
./node_modules/.bin/webpack --mode development --entry ./src/index.js --output ./dist/index.js
```